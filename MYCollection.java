/*
 * MYCollection.java
 *
 * Created on __DATE__, __TIME__
 */

package view;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import model.Customer;
import model.Favorite;
import model.Food;
import server.Client;

/**
 *
 * @author  __USER__
 */
public class MYCollection extends javax.swing.JFrame  {
	Customer customer;
	/** Creates new form MYCollection 
	 * @throws ClassNotFoundException 
	 * @throws IOException 
	 * @throws UnknownHostException */
	public MYCollection() throws UnknownHostException, IOException, ClassNotFoundException {
		initComponents();

		/*处理页面美化*/
		this.drawCollection();

		/*显示所有收藏*/
		this.showCollection();

		jScrollPane1
				.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
		this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		
	}
	
	public MYCollection(Customer customer) throws UnknownHostException, IOException, ClassNotFoundException {
		this.customer=customer;
		initComponents();

		/*处理页面美化*/
		this.drawCollection();
		
		
		/*显示所有收藏*/
		this.showCollection(customer);

		jScrollPane1
				.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
		this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
		this.setLocationRelativeTo(null);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jPanel3 = new javax.swing.JPanel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18));
		jLabel1.setForeground(new java.awt.Color(255, 255, 255));
		jLabel1.setText("\u6211\u7684\u6536\u85cf");

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				jPanel2Layout.createSequentialGroup().addContainerGap(310,
						Short.MAX_VALUE).addComponent(jLabel1,
						javax.swing.GroupLayout.PREFERRED_SIZE, 94,
						javax.swing.GroupLayout.PREFERRED_SIZE).addGap(303,
						303, 303)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				jPanel2Layout.createSequentialGroup().addGap(14, 14, 14)
						.addComponent(jLabel1,
								javax.swing.GroupLayout.DEFAULT_SIZE, 41,
								Short.MAX_VALUE).addContainerGap()));

		jScrollPane1
				.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(
				jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 705,
				Short.MAX_VALUE));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 447,
				Short.MAX_VALUE));

		jScrollPane1.setViewportView(jPanel3);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jScrollPane1,
						javax.swing.GroupLayout.DEFAULT_SIZE, 707,
						Short.MAX_VALUE));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addComponent(
												jPanel2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane1,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												443, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		try {
			org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
		} catch (Exception e) {
			//TODO exception
		}
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					new MYCollection().setVisible(true);
				} catch (UnknownHostException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JScrollPane jScrollPane1;

	// End of variables declaration//GEN-END:variables

	/**
	 * 处理页面美化
	 */

	public void drawCollection() {
		jPanel1.setBackground(new Color(95, 142, 230)); //处理jPanel1的背景颜色
		jPanel2.setBackground(new Color(95, 142, 230)); //处理jPanel2的背景颜色

	}

	/**我的收藏**/

	ArrayList<JPanel> jPanels;
	ArrayList<JLabel> imageLabels;
	ArrayList<JLabel> nameLabels;
	ArrayList<JLabel> sellCountLabels;
	ArrayList<JLabel> priceLabels;
	ArrayList<JButton> deleteButtons = new ArrayList<JButton>();
	Color color;
	ArrayList<Favorite> favorites;
	
	public void showCollection() {

		jPanels = new ArrayList<JPanel>();
		imageLabels = new ArrayList<JLabel>();
		nameLabels = new ArrayList<JLabel>();
		sellCountLabels = new ArrayList<JLabel>();
		priceLabels = new ArrayList<JLabel>();

		for (int i = 0; i < 6; i++) {
			/*首先放一个面板进去*/
			jPanels.add(new JPanel());
			jPanels.get(i).setSize(jPanel3.getWidth(), 120);
			jPanels.get(i).setBounds(0, jPanels.get(i).getHeight() * i,
					jPanel3.getWidth(), 120);
			jPanels.get(i).setBorder(
					BorderFactory.createMatteBorder(0, 0, 1, 0,
							Color.LIGHT_GRAY));
			jPanels.get(i).setBackground(Color.WHITE);
			
			jPanel3.add(jPanels.get(i));

			/*设置jPanel面板最大值*/
			Dimension ds = new Dimension(jPanel3.getWidth(), jPanels.get(i)
					.getHeight()
					* i + 150);
			jPanel3.setPreferredSize(ds);
			
			//获取背景颜色
			color = jPanels.get(i).getBackground();

			/*添加食物图像*/
			ImageIcon icon = new ImageIcon("Image/凉拌猪耳朵.jpg");
			imageLabels.add(new JLabel());
			jPanels.get(i).setLayout(null);
			imageLabels.get(i).setBounds(10, 10, 100, 100);
			Image temp = icon.getImage().getScaledInstance(
					imageLabels.get(i).getWidth(),
					imageLabels.get(i).getHeight(), Image.SCALE_DEFAULT);
			icon = new ImageIcon(temp);
			imageLabels.get(i).setIcon(icon);
			jPanels.get(i).add(imageLabels.get(i));

			/*添加食物名字*/
			nameLabels.add(new JLabel("凉拌猪耳朵"));
			nameLabels.get(i).setBounds(120, 5, 140, 50);
			nameLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 18));
			jPanels.get(i).add(nameLabels.get(i));

			/*添加月售多少份*/
			sellCountLabels.add(new JLabel("月售:110份"));
			sellCountLabels.get(i).setBounds(120, 40, 140, 50);
			jPanels.get(i).add(sellCountLabels.get(i));

			/*添加价格*/
			priceLabels.add(new JLabel("￥22"));
			priceLabels.get(i).setBounds(550, 70, 50, 50);
			jPanels.get(i).add(priceLabels.get(i));

			/*添加删除按钮*/
			deleteButtons.add(new JButton("删除"));
			deleteButtons.get(i).setBounds(600, 70, 50, 30);
			jPanels.get(i).add(deleteButtons.get(i));
jPanels.get(i).addMouseListener(new MouseListener() {
				
				@Override
				public void mouseReleased(MouseEvent e) {
					// TODO Auto-generated method stub
					
				}
				
				@Override
				public void mousePressed(MouseEvent e) {
					// TODO Auto-generated method stub
					
				}
				
				@Override
				public void mouseExited(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < favorites.size(); i++) {
						if (e.getSource().equals(jPanels.get(i)))
							jPanels.get(i).setBackground(color);
					}
				}
				
				@Override
				public void mouseEntered(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < favorites.size(); i++) {
						if (e.getSource().equals(jPanels.get(i)))
							jPanels.get(i).setBackground(
									new Color(173, 175, 173, 80));
					}
				}
				
				@Override
				public void mouseClicked(MouseEvent e) {
					// TODO Auto-generated method stub
					
				}
			});
		}
	}
	
	public void showCollection( final Customer customer) throws UnknownHostException, IOException, ClassNotFoundException {

		Client client=new Client();
		favorites=client.viewAllFavorite(this.customer.getCid());
		
		jPanels = new ArrayList<JPanel>();
		imageLabels = new ArrayList<JLabel>();
		nameLabels = new ArrayList<JLabel>();
		sellCountLabels = new ArrayList<JLabel>();
		priceLabels = new ArrayList<JLabel>();

		for (int i = 0; i < favorites.size(); i++) {
			/*首先放一个面板进去*/
			jPanels.add(new JPanel());
			jPanels.get(i).setSize(jPanel3.getWidth(), 120);
			jPanels.get(i).setBounds(0, jPanels.get(i).getHeight() * i,
					jPanel3.getWidth(), 120);
			jPanels.get(i).setBorder(
					BorderFactory.createMatteBorder(0, 0, 1, 0,
							Color.LIGHT_GRAY));
			jPanels.get(i).setBackground(Color.WHITE);
			
			jPanel3.add(jPanels.get(i));

			/*设置jPanel面板最大值*/
			Dimension ds = new Dimension(jPanel3.getWidth(), jPanels.get(i)
					.getHeight()
					* i + 150);
			jPanel3.setPreferredSize(ds);

			/*添加食物图像*/
			ImageIcon icon = new ImageIcon(favorites.get(i).getFoodImage());
			imageLabels.add(new JLabel());
			jPanels.get(i).setLayout(null);
			imageLabels.get(i).setBounds(10, 10, 100, 100);
			Image temp = icon.getImage().getScaledInstance(
					imageLabels.get(i).getWidth(),
					imageLabels.get(i).getHeight(), Image.SCALE_DEFAULT);
			icon = new ImageIcon(temp);
			imageLabels.get(i).setIcon(icon);
			jPanels.get(i).add(imageLabels.get(i));

			/*添加食物名字*/
			nameLabels.add(new JLabel(favorites.get(i).getFoodName()));
			nameLabels.get(i).setBounds(120, 5, 140, 50);
			nameLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 18));
			jPanels.get(i).add(nameLabels.get(i));

			/*添加月售多少份*/
			sellCountLabels.add(new JLabel("月售:110份"));
			sellCountLabels.get(i).setBounds(120, 40, 140, 50);
			jPanels.get(i).add(sellCountLabels.get(i));

			/*添加价格*/
			priceLabels.add(new JLabel("￥22"));
			priceLabels.get(i).setBounds(550, 70, 50, 50);
			jPanels.get(i).add(priceLabels.get(i));

			/*添加删除按钮*/
			deleteButtons.add(new JButton("删除"));
			deleteButtons.get(i).setBounds(600, 70, 50, 30);
			jPanels.get(i).add(deleteButtons.get(i));
			jPanels.get(i).addMouseListener(new MouseListener() {
				
				@Override
				public void mouseReleased(MouseEvent e) {
					// TODO Auto-generated method stub
					
				}
				
				@Override
				public void mousePressed(MouseEvent e) {
					// TODO Auto-generated method stub
					
				}
				
				@Override
				public void mouseExited(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < favorites.size(); i++) {
						if (e.getSource().equals(jPanels.get(i)))
							jPanels.get(i).setBackground(color);
					}
				}
				
				@Override
				public void mouseEntered(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < favorites.size(); i++) {
						if (e.getSource().equals(jPanels.get(i)))
							jPanels.get(i).setBackground(
									new Color(173, 175, 173, 80));
					}
				}
				
				@Override
				public void mouseClicked(MouseEvent e) {
					// TODO Auto-generated method stub
					for(int i=0;i<favorites.size();i++){
						if(e.getSource().equals(jPanels.get(i))){
							try {
								new ShopView(favorites.get(i).getSid(), customer).setVisible(true);
							} catch (UnknownHostException e1) {
								// TODO Auto-generated catch block
								e1.printStackTrace();
							} catch (IOException e1) {
								// TODO Auto-generated catch block
								e1.printStackTrace();
							} catch (ClassNotFoundException e1) {
								// TODO Auto-generated catch block
								e1.printStackTrace();
							}
						}
					}
				}
			});

			/**
			 * 客户删除收藏的东西
			 */
			deleteButtons.get(i).addMouseListener(new MouseListener() {
				
				@Override
				public void mouseReleased(MouseEvent e) {
					// TODO Auto-generated method stub
					
				}
				
				@Override
				public void mousePressed(MouseEvent e) {
					// TODO Auto-generated method stub
					
				}
				
				@Override
				public void mouseExited(MouseEvent e) {
					// TODO Auto-generated method stub
					
				}
				
				@Override
				public void mouseEntered(MouseEvent e) {
					// TODO Auto-generated method stub
					
				}
				
				@Override
				public void mouseClicked(MouseEvent e) {
					// TODO Auto-generated method stub
					for(int i=0;i<favorites.size();i++){
						if(e.getSource().equals(deleteButtons.get(i))){
							try {
								Client client=new Client();
								client.deleteCollection(favorites.get(i).getFoodName());
								new MYCollection(customer).setVisible(true);
								close();
								
							} catch (Exception e1) {
								// TODO Auto-generated catch block
								e1.printStackTrace();
							}
						}
						
					}
				}
			});
		}
	}
	public void close(){
		this.dispose();
	}
}