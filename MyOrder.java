/*
 * MyOrder.java
 *
 * Created on __DATE__, __TIME__
 */

package view;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import server.Client;

import model.Customer;
import model.Food;
import model.Order;

/**
 *
 * @author  __USER__
 */
public class MyOrder extends javax.swing.JFrame implements MouseListener {
	Customer customer;
	
	//没实现功能前，假设几个属性
	String shopname = "小黄家";
	String orderTime = "2018-6-2";
	String foodName = "牛肉盖饭";
	String State = "订单已完成";
	String foodPrice = "8";

	/** Creates new form MyOrder 
	 * @throws IOException 
	 * @throws UnknownHostException */
	public MyOrder() throws UnknownHostException, IOException {
		initComponents();

		/*处理页面美化*/
		this.drawOrder();
		
		/*显示用户订单*/
		this.showOrder();
		
		jScrollPane1
				.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
		this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
		this.setLocationRelativeTo(null);
	}
	
	public MyOrder(Customer customer) throws UnknownHostException, IOException, ClassNotFoundException {
		this.customer = customer;
		initComponents();

		/*处理页面美化*/
		this.drawOrder();

		/*显示用户订单*/
		this.showOrder(customer);

		jScrollPane1
				.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
		this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jPanel3 = new javax.swing.JPanel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("\u8ba2\u5355");

		jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 24));
		jLabel1.setForeground(new java.awt.Color(255, 255, 255));
		jLabel1.setText("\u8ba2\u5355");

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				jPanel2Layout.createSequentialGroup().addContainerGap(325,
						Short.MAX_VALUE).addComponent(jLabel1,
						javax.swing.GroupLayout.PREFERRED_SIZE, 73,
						javax.swing.GroupLayout.PREFERRED_SIZE).addGap(308,
						308, 308)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel2Layout.createSequentialGroup().addContainerGap()
						.addComponent(jLabel1,
								javax.swing.GroupLayout.DEFAULT_SIZE, 36,
								Short.MAX_VALUE).addContainerGap()));

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(
				jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 704,
				Short.MAX_VALUE));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 503,
				Short.MAX_VALUE));

		jScrollPane1.setViewportView(jPanel3);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jScrollPane1,
						javax.swing.GroupLayout.DEFAULT_SIZE, 706,
						Short.MAX_VALUE));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addComponent(
												jPanel2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane1,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												505, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		try {
			org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
		} catch (Exception e) {
			//TODO exception
		}
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					new MyOrder().setVisible(true);
				} catch (UnknownHostException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JScrollPane jScrollPane1;

	// End of variables declaration//GEN-END:variables

	/**处理页面美化**/

	public void drawOrder() {
		jPanel1.setBackground(new Color(95, 142, 230)); //设置jPanel1背景颜色
		jPanel2.setBackground(new Color(95, 142, 230)); //设置jPanel2背景颜色
		
	}

	/**客户查看订单**/
	ArrayList<Order> orders;
	ArrayList<JPanel> jPanels;
	ArrayList<JLabel> imageLabels;
	ArrayList<JLabel> shopLabels;
	ArrayList<JLabel> ordertime;
	ArrayList<JLabel> foodNameLabels;
	ArrayList<JLabel> stateLabels;
	ArrayList<JLabel> priceLabels;
	ArrayList<JButton> evaluateButtons = new ArrayList<JButton>();
	ArrayList<JButton> cancelButtons = new ArrayList<JButton>();
	ArrayList<JButton> qudanButtons = new ArrayList<JButton>();

	public void showOrder() throws UnknownHostException, IOException {
		Client client=new Client();
		
		jPanels = new ArrayList<JPanel>();
		imageLabels = new ArrayList<JLabel>();
		shopLabels = new ArrayList<JLabel>();
		ordertime = new ArrayList<JLabel>();
		foodNameLabels = new ArrayList<JLabel>();
		stateLabels = new ArrayList<JLabel>();
		priceLabels = new ArrayList<JLabel>();

		for (int i = 0; i < 5; i++) {
			/*首先放一个面板进去*/
			jPanels.add(new JPanel());
			jPanels.get(i).setSize(jPanel3.getWidth(), 150);
			jPanels.get(i).setBounds(0, jPanels.get(i).getHeight() * i,
					jPanel3.getWidth(), 150);
			jPanels.get(i).setBorder(
					BorderFactory.createMatteBorder(0, 0, 1, 0,
							Color.LIGHT_GRAY));
			jPanels.get(i).setBackground(Color.WHITE);
			jPanels.get(i).addMouseListener(this);
			
			jPanel3.add(jPanels.get(i));

			/*设置jPanel面板最大值*/
			Dimension ds = new Dimension(jPanel3.getWidth(), jPanels.get(i)
					.getHeight()
					* i + 150);
			jPanel3.setPreferredSize(ds);

			/*添加食物图像*/
			ImageIcon icon = new ImageIcon("Image/红烧肉.jpg");
			imageLabels.add(new JLabel());
			jPanels.get(i).setLayout(null);
			imageLabels.get(i).setBounds(10, 15, 120, 120);
			Image temp = icon.getImage().getScaledInstance(
					imageLabels.get(i).getWidth(),
					imageLabels.get(i).getHeight(), Image.SCALE_DEFAULT);
			icon = new ImageIcon(temp);
			imageLabels.get(i).setIcon(icon);
			jPanels.get(i).add(imageLabels.get(i));

			/*添加商店名字*/
			shopLabels.add(new JLabel("小黄家"));
			shopLabels.get(i).setBounds(150, 5, 140, 50);
			shopLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 22));
			jPanels.get(i).add(shopLabels.get(i));

			/*添加食物名字*/
			foodNameLabels.add(new JLabel(foodName));
			foodNameLabels.get(i).setBounds(150, 40, 180, 50);
			foodNameLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 18));
			jPanels.get(i).add(foodNameLabels.get(i));

			/*添加下单时间*/
			ordertime.add(new JLabel(orderTime));
			ordertime.get(i).setBounds(150, 70, 140, 50);
			jPanels.get(i).add(ordertime.get(i));

			/*添加状态*/
			stateLabels.add(new JLabel(State));
			stateLabels.get(i).setBounds(580, 10, 180, 30);
			stateLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 14));
			jPanels.get(i).add(stateLabels.get(i));

			/*添加食物价格*/
			priceLabels.add(new JLabel("￥8"));
			priceLabels.get(i).setBounds(600, 50, 50, 50);
			priceLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 18));
			jPanels.get(i).add(priceLabels.get(i));

			/*添加评价按钮*/
			evaluateButtons.add(new JButton("评价"));
			evaluateButtons.get(i).setBounds(580, 100, 70, 30);
			jPanels.get(i).add(evaluateButtons.get(i));

		}
	}
	
	
	public void showOrder(final Customer customer) throws UnknownHostException, IOException, ClassNotFoundException {
		Client client=new Client();

		orders=client.viewOrder(customer.getCid());
		
		jPanels = new ArrayList<JPanel>();
		imageLabels = new ArrayList<JLabel>();
		shopLabels = new ArrayList<JLabel>();
		ordertime = new ArrayList<JLabel>();
		foodNameLabels = new ArrayList<JLabel>();
		stateLabels = new ArrayList<JLabel>();
		priceLabels = new ArrayList<JLabel>();

		for (int i = 0; i < orders.size(); i++) {
			/*首先放一个面板进去*/
			jPanels.add(new JPanel());
			jPanels.get(i).setSize(jPanel3.getWidth(), 150);
			jPanels.get(i).setBounds(0, jPanels.get(i).getHeight() * i,
					jPanel3.getWidth(), 150);
			jPanels.get(i).setBorder(
					BorderFactory.createMatteBorder(0, 0, 1, 0,
							Color.LIGHT_GRAY));
			jPanels.get(i).setBackground(Color.WHITE);
			jPanels.get(i).addMouseListener(this);
			
			jPanel3.add(jPanels.get(i));

			/*设置jPanel面板最大值*/
			Dimension ds = new Dimension(jPanel3.getWidth(), jPanels.get(i)
					.getHeight()
					* i + 150);
			jPanel3.setPreferredSize(ds);

			/*添加食物图像*/
			ImageIcon icon = new ImageIcon("Image/"+orders.get(i).getFoodImage());
			imageLabels.add(new JLabel());
			jPanels.get(i).setLayout(null);
			imageLabels.get(i).setBounds(10, 15, 120, 120);
			Image temp = icon.getImage().getScaledInstance(
					imageLabels.get(i).getWidth(),
					imageLabels.get(i).getHeight(), Image.SCALE_DEFAULT);
			icon = new ImageIcon(temp);
			imageLabels.get(i).setIcon(icon);
			jPanels.get(i).add(imageLabels.get(i));

			/*添加商店名字*/
			shopLabels.add(new JLabel(orders.get(i).getRemark()));
			shopLabels.get(i).setBounds(150, 5, 140, 50);
			shopLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 22));
			jPanels.get(i).add(shopLabels.get(i));

			/*添加食物名字*/
			foodNameLabels.add(new JLabel(orders.get(i).getFoodName()));
			foodNameLabels.get(i).setBounds(150, 40, 180, 50);
			foodNameLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 18));
			jPanels.get(i).add(foodNameLabels.get(i));

			/*添加下单时间*/
			ordertime.add(new JLabel(orderTime));
			ordertime.get(i).setBounds(150, 70, 140, 50);
			jPanels.get(i).add(ordertime.get(i));

			/*添加状态*/
			stateLabels.add(new JLabel(orders.get(i).getState()));
			stateLabels.get(i).setBounds(580, 10, 180, 30);
			stateLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 14));
			jPanels.get(i).add(stateLabels.get(i));

			/*添加食物价格*/
			priceLabels.add(new JLabel("￥"+orders.get(i).getPrice()+""));
			priceLabels.get(i).setBounds(590, 50, 70, 50);
			priceLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 18));
			jPanels.get(i).add(priceLabels.get(i));
			
			
			/*添加评价按钮*/
			
				evaluateButtons.add(new JButton("评价"));
				evaluateButtons.get(i).setBounds(580, 100, 70, 30);
				
		

			/*催单*/
				qudanButtons.add(new JButton("催单"));
				qudanButtons.get(i).setBounds(580, 100, 70, 30);
				
				/*取消订单*/
				cancelButtons.add(new JButton("取消订单"));
				cancelButtons.get(i).setBounds(480, 100, 90, 30);
				
				if(orders.get(i).getState().equals("已完成")){
					jPanels.get(i).add(evaluateButtons.get(i));
				}else{
					jPanels.get(i).add(qudanButtons.get(i));
					jPanels.get(i).add(cancelButtons.get(i));
				}
				
				/*评价事件处理*/
				evaluateButtons.get(i).addActionListener(new ActionListener() {
					
					@Override
					public void actionPerformed(ActionEvent e) {
						// TODO Auto-generated method stub
						for(int i=0;i<orders.size();i++){
							if(e.getSource().equals(evaluateButtons.get(i))){
								String evaluate=JOptionPane.showInputDialog("");
								try {
									comment(customer.getCid(),customer.getCname(),orders.get(i).getSid(),orders.get(i).getRemark(),orders.get(i).getFoodName(),evaluate);
								} catch (UnknownHostException e1) {
									// TODO Auto-generated catch block
									e1.printStackTrace();
								} catch (IOException e1) {
									// TODO Auto-generated catch block
									e1.printStackTrace();
								}
							}
						}
						
					}
				});
		}
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		for(int i = 0; i < orders.size();i++) {
			if(e.getSource().equals(jPanels.get(i))) {
				jPanels.get(i).setBackground(new Color(173, 175, 173, 80));
			}
			
		}
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		for(int i = 0; i < orders.size();i++) {
			if(e.getSource().equals(jPanels.get(i))) {
				jPanels.get(i).setBackground(Color.WHITE);
			}
			
		}
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	
	/*用户评价*/
	public void comment(String cid,String cname,String bid,String bname,String foodname,String evaluate) throws UnknownHostException, IOException{
		Client client=new Client();
		client.comment(cid, cname, bid, bname, foodname, evaluate);
	}
}