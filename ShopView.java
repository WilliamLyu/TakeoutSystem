/*
 * ShopView.java
 *
 * Created on __DATE__, __TIME__
 */

package view;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Label;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.net.UnknownHostException;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;

import model.Customer;
import model.Food;
import model.RedEvenlope;
import model.Shop;
import server.Client;

/**
 *
 * @author  __USER__
 */
public class ShopView extends javax.swing.JFrame implements MouseListener {
	Shop shop;
	String sid;

	Customer customer = new Customer();

	/** Creates new form ShopView 
	 * @throws ClassNotFoundException 
	 * @throws IOException 
	 * @throws UnknownHostException */
	public ShopView() throws UnknownHostException, IOException,
			ClassNotFoundException {
		initComponents();
		jScrollPane1
				.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);

		//showFood();
		drawMarket();

		ImageIcon image = new ImageIcon("Image/店铺头像7.jpg");

		Image temp = image.getImage().getScaledInstance(jLabel1.getWidth(),//设置商店头像
				jLabel1.getWidth(), Image.SCALE_DEFAULT);
		image = new ImageIcon(temp);

		jLabel1.setSize(100, 100);
		jLabel1.setIcon(image);
		jLabel1.setSize(100, 100);

		this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
		this.setLocationRelativeTo(null);
	}

	public ShopView(Shop shop) throws UnknownHostException, IOException,
			ClassNotFoundException {
		this.shop = shop;

		initComponents();
		jScrollPane1
				.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);

		//showFood(shop);
		drawMarket();

		ImageIcon image = new ImageIcon(shop.getImages());
		System.out.println(shop.getSid());
		Image temp = image.getImage().getScaledInstance(jLabel1.getWidth(),//设置商店头像
				jLabel1.getWidth(), Image.SCALE_DEFAULT);
		image = new ImageIcon(temp);

		jLabel1.setSize(100, 100);
		jLabel1.setIcon(image);
		jLabel1.setSize(100, 100);
		jLabel2.setText(shop.getSname());

		this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
		this.setLocationRelativeTo(null);
	}

	public ShopView(String sid, Customer customer) throws UnknownHostException,
			IOException, ClassNotFoundException {
		this.sid = sid;
		this.customer = customer;

		initComponents();
		jScrollPane1
				.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);

		/*显示菜品*/
		showFood(sid, customer);
		drawMarket();

		ImageIcon image = new ImageIcon("Image/店铺头像7.png");

		Image temp = image.getImage().getScaledInstance(jLabel1.getWidth(),//设置商店头像
				jLabel1.getWidth(), Image.SCALE_DEFAULT);
		image = new ImageIcon(temp);

		/*显示红包*/
		this.showBRedEvenlope(sid);

		/*显示状态*/
		Client client = new Client();

		if (client.judgeOperating(sid).equals("开业")) {
			jLabel7.setText("营业中");
		}

		/*	jLabel1.setSize(100, 100);
			jLabel1.setIcon(image);
			jLabel1.setSize(100, 100);
			jLabel2.setText("小黄家");*/
		this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
		this.setLocationRelativeTo(null);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jPanel2 = new javax.swing.JPanel();
		jPanel3 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		jPanel6 = new javax.swing.JPanel();
		jPanel4 = new javax.swing.JPanel();
		jButton2 = new javax.swing.JButton();
		jPanel5 = new javax.swing.JPanel();
		jButton1 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setText("jLabel1");

		jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18));
		jLabel2.setForeground(new java.awt.Color(255, 255, 255));
		jLabel2.setText("\u5c0f\u9ec4\u5bb6");

		jLabel3.setText("\u7f8e\u5473\u597d\u5403");

		jLabel4.setText("\u914d\u900130\u5206\u949f");

		jLabel7.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18));
		jLabel7.setForeground(new java.awt.Color(255, 255, 255));
		jLabel7.setText("\u4f11\u606f\u4e2d");

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(
				jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout
				.setHorizontalGroup(jPanel3Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel3Layout
										.createSequentialGroup()
										.addGap(55, 55, 55)
										.addGroup(
												jPanel3Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jLabel7,
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(
																jLabel3,
																javax.swing.GroupLayout.Alignment.TRAILING))
										.addGroup(
												jPanel3Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																jPanel3Layout
																		.createSequentialGroup()
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																				550,
																				Short.MAX_VALUE)
																		.addComponent(
																				jLabel4)
																		.addGap(
																				41,
																				41,
																				41))
														.addGroup(
																jPanel3Layout
																		.createSequentialGroup()
																		.addGap(
																				234,
																				234,
																				234)
																		.addGroup(
																				jPanel3Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addGroup(
																								jPanel3Layout
																										.createSequentialGroup()
																										.addGap(
																												10,
																												10,
																												10)
																										.addComponent(
																												jLabel2))
																						.addComponent(
																								jLabel1,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								87,
																								javax.swing.GroupLayout.PREFERRED_SIZE))
																		.addContainerGap(
																				348,
																				Short.MAX_VALUE)))));
		jPanel3Layout
				.setVerticalGroup(jPanel3Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel3Layout
										.createSequentialGroup()
										.addGroup(
												jPanel3Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																jPanel3Layout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addComponent(
																				jLabel1,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				78,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jLabel2))
														.addGroup(
																jPanel3Layout
																		.createSequentialGroup()
																		.addGap(
																				31,
																				31,
																				31)
																		.addComponent(
																				jLabel7)))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanel3Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel3)
														.addComponent(jLabel4))
										.addContainerGap()));

		javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(
				jPanel6);
		jPanel6.setLayout(jPanel6Layout);
		jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 1085,
				Short.MAX_VALUE));
		jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 460,
				Short.MAX_VALUE));

		jButton2.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18));
		jButton2.setText("\u8054\u7cfb\u5546\u5bb6");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(
				jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				jPanel4Layout.createSequentialGroup().addGap(211, 211, 211)
						.addComponent(jButton2,
								javax.swing.GroupLayout.DEFAULT_SIZE, 359,
								Short.MAX_VALUE).addGap(32, 32, 32)));
		jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel4Layout.createSequentialGroup().addComponent(jButton2,
						javax.swing.GroupLayout.PREFERRED_SIZE, 45,
						javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));

		javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(
				jPanel5);
		jPanel5.setLayout(jPanel5Layout);
		jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 383,
				Short.MAX_VALUE));
		jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 61,
				Short.MAX_VALUE));

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout
				.setHorizontalGroup(jPanel2Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel2Layout
										.createSequentialGroup()
										.addGap(0, 0, Short.MAX_VALUE)
										.addGroup(
												jPanel2Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jPanel6,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																jPanel2Layout
																		.createSequentialGroup()
																		.addComponent(
																				jPanel4,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jPanel5,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addGap(
																				91,
																				91,
																				91))
														.addGroup(
																jPanel2Layout
																		.createSequentialGroup()
																		.addComponent(
																				jPanel3,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addContainerGap()))));
		jPanel2Layout
				.setVerticalGroup(jPanel2Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel2Layout
										.createSequentialGroup()
										.addComponent(
												jPanel3,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanel2Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(
																jPanel4,
																0,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jPanel5,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jPanel6,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		jScrollPane1.setViewportView(jPanel2);

		jButton1.setText("\u7ed3\u7b97");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton3.setText("\u4f7f\u7528\u7ea2\u5305");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jLabel5.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18));
		jLabel5.setText("\uffe5");

		jLabel6.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18));
		jLabel6.setText("0");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 806,
				Short.MAX_VALUE).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				jPanel1Layout.createSequentialGroup().addContainerGap(391,
						Short.MAX_VALUE).addComponent(jLabel5).addGap(51, 51,
						51).addComponent(jLabel6,
						javax.swing.GroupLayout.PREFERRED_SIZE, 64,
						javax.swing.GroupLayout.PREFERRED_SIZE).addGap(44, 44,
						44).addComponent(jButton1,
						javax.swing.GroupLayout.PREFERRED_SIZE, 97,
						javax.swing.GroupLayout.PREFERRED_SIZE).addGap(33, 33,
						33).addComponent(jButton3).addContainerGap()));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addComponent(
												jScrollPane1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												627,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												31, Short.MAX_VALUE)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jButton3)
														.addComponent(jButton1)
														.addComponent(
																jLabel6,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																29,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel5))
										.addContainerGap()));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		try {
			org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
		} catch (Exception e) {
			//TODO exception
		}
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					new ShopView().setVisible(true);
				} catch (UnknownHostException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JPanel jPanel6;
	private javax.swing.JScrollPane jScrollPane1;
	// End of variables declaration//GEN-END:variables

	/**管理食物**/
	ArrayList<Food> foods;
	ArrayList<JPanel> jPanels;
	ArrayList<JLabel> imageLabels;
	ArrayList<JLabel> nameLabels;
	ArrayList<JLabel> describeLabels;
	ArrayList<JLabel> sellCountLabels;
	ArrayList<JLabel> priceLabels;
	ArrayList<JLabel> addLabels;
	ArrayList<JTextField> countTextFields;
	Color color;

	int allprices = 0; //总价

	/*public void showFood(Shop shop) throws UnknownHostException, IOException,
			ClassNotFoundException {
		Client client = new Client();
		foods = client.showFood(shop.getSid());
		jPanels = new ArrayList<JPanel>();
		imageLabels = new ArrayList<JLabel>();
		nameLabels = new ArrayList<JLabel>();
		describeLabels = new ArrayList<JLabel>();
		sellCountLabels = new ArrayList<JLabel>();
		priceLabels = new ArrayList<JLabel>();
		addLabels = new ArrayList<JLabel>();

		for (int i = 0; i < foods.size(); i++) {
			首先放一个面板进去
			jPanels.add(new JPanel());
			jPanels.get(i).setSize(jPanel6.getWidth(), 120);
			jPanels.get(i).setBounds(0, jPanels.get(i).getHeight() * i,
					jPanel6.getWidth(), 120);
			jPanels.get(i).setBorder(BorderFactory.createEtchedBorder());
			jPanel6.add(jPanels.get(i));

			设置jPanel面板最大值
			Dimension ds = new Dimension(jPanel6.getWidth(), jPanels.get(i)
					.getHeight()
	 * i + 150);
			jPanel6.setPreferredSize(ds);

			//获取背景颜色
			color = jPanels.get(i).getBackground();

			添加食物图像
			ImageIcon icon = new ImageIcon("Image/" + foods.get(i).getImage());
			imageLabels.add(new JLabel());
			jPanels.get(i).setLayout(null);
			imageLabels.get(i).setBounds(10, 10, 100, 100);
			Image temp = icon.getImage().getScaledInstance(
					imageLabels.get(i).getWidth(),
					imageLabels.get(i).getHeight(), Image.SCALE_DEFAULT);
			icon = new ImageIcon(temp);
			imageLabels.get(i).setIcon(icon);
			jPanels.get(i).add(imageLabels.get(i));

			添加食物名字
			nameLabels.add(new JLabel(foods.get(i).getFoodName()));
			nameLabels.get(i).setBounds(120, 5, 140, 50);
			nameLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 18));
			jPanels.get(i).add(nameLabels.get(i));

			添加月售多少份
			sellCountLabels.add(new JLabel("月售:" + foods.get(i).getSellcount()
					+ "份"));
			sellCountLabels.get(i).setBounds(120, 40, 140, 50);
			jPanels.get(i).add(sellCountLabels.get(i));

			添加描述
			describeLabels.add(new JLabel("描述:"
					+ foods.get(i).getFoodInformation()));
			describeLabels.get(i).setBounds(120, 70, 180, 50);
			jPanels.get(i).add(describeLabels.get(i));

			添加价格
			priceLabels.add(new JLabel("￥" + foods.get(i).getFoodPrice()));
			priceLabels.get(i).setBounds(600, 70, 50, 50);
			jPanels.get(i).add(priceLabels.get(i));

			添加购买按钮
			addLabels.add(new JLabel());
			addLabels.get(i).setBounds(650, 65, 50, 50);
			ImageIcon icon2 = new ImageIcon("Image/加1.png");
			addLabels.get(i).setIcon(icon2);
			jPanels.get(i).add(addLabels.get(i));

			jPanels.get(i).addMouseListener(new MouseListener() {

				@Override
				public void mouseReleased(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mousePressed(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mouseExited(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < foods.size(); i++) {
						if (e.getSource().equals(jPanels.get(i))) {

							jPanels.get(i).setBackground(color);

						}

					}
				}

				@Override
				public void mouseEntered(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < foods.size(); i++) {
						if (e.getSource().equals(jPanels.get(i))) {
							jPanels.get(i).setBackground(
									new Color(255, 255, 255, 255));

						}
					}
				}

				@Override
				public void mouseClicked(MouseEvent e) {
					// TODO Auto-generated method stub

				}
			});
			addLabels.get(i).addMouseListener(new MouseListener() {

				@Override
				public void mouseReleased(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mousePressed(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mouseExited(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < foods.size(); i++) {
						if (e.getSource().equals(addLabels.get(i))) {
							ImageIcon icon2 = new ImageIcon("Image/加1.png");
							addLabels.get(i).setIcon(icon2);
						}
					}
				}

				@Override
				public void mouseEntered(MouseEvent e) {
					// TODO Auto-generated method stub
					// TODO Auto-generated method stub
					try {

						for (int i = 0; i < foods.size(); i++) {

							if (e.getSource().equals(addLabels.get(i))) {

								int count = Integer.parseInt(countTextFields
										.get(i).getText());
								countTextFields.get(i).setText("" + ++count);

								int prices = (int) (foods.get(i).getFoodPrice());

								allprices = prices + allprices;

								结算
								jLabel5.setText("" + allprices);

							}

						}

					} catch (Exception e1) {
						e1.printStackTrace();
					}
				}

				@Override
				public void mouseClicked(MouseEvent e) {
					// TODO Auto-generated method stub
					try {
						Client client = new Client();
						for (int i = 0; i < foods.size(); i++) {

							client.buyFood(foods.get(i).getFoodName(), foods
									.get(i).getImage(), foods.get(i)
									.getFoodPrice()
									+ "", "1", foods.get(i).getSid(), "2", 1,
									foods.get(i).getSname());
						}

					} catch (UnknownHostException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					} catch (SQLException e2) {
						// TODO Auto-generated catch block
						e2.printStackTrace();
					} catch (ClassNotFoundException e22) {
						// TODO Auto-generated catch block
						e22.printStackTrace();
					}
				}
			});
		}
	}*/

	public void showFood(String sid, Customer customer)
			throws UnknownHostException, IOException, ClassNotFoundException {

		Client client = new Client();
		foods = client.showFood(sid);

		jPanels = new ArrayList<JPanel>();
		imageLabels = new ArrayList<JLabel>();
		nameLabels = new ArrayList<JLabel>();
		describeLabels = new ArrayList<JLabel>();
		sellCountLabels = new ArrayList<JLabel>();
		priceLabels = new ArrayList<JLabel>();
		addLabels = new ArrayList<JLabel>();
		countTextFields = new ArrayList<JTextField>();

		for (int i = 0; i < foods.size(); i++) {
			/*首先放一个面板进去*/
			jPanels.add(new JPanel());
			jPanels.get(i).setSize(jPanel6.getWidth(), 120);
			jPanels.get(i).setBounds(0, jPanels.get(i).getHeight() * i,
					jPanel6.getWidth(), 120);
			jPanels.get(i).setBorder(BorderFactory.createEtchedBorder());
			jPanel6.add(jPanels.get(i));

			/*设置jPanel面板最大值*/
			Dimension ds = new Dimension(jPanel6.getWidth(), jPanels.get(i)
					.getHeight()
					* i + 150);
			jPanel6.setPreferredSize(ds);

			//获取背景颜色
			color = jPanels.get(i).getBackground();

			/*添加食物图像*/
			ImageIcon icon = new ImageIcon("Image/" + foods.get(i).getImage());
			imageLabels.add(new JLabel());
			jPanels.get(i).setLayout(null);
			imageLabels.get(i).setBounds(10, 10, 100, 100);
			Image temp = icon.getImage().getScaledInstance(
					imageLabels.get(i).getWidth(),
					imageLabels.get(i).getHeight(), Image.SCALE_DEFAULT);
			icon = new ImageIcon(temp);
			imageLabels.get(i).setIcon(icon);
			jPanels.get(i).add(imageLabels.get(i));

			/*添加食物名字*/
			nameLabels.add(new JLabel(foods.get(i).getFoodName()));
			nameLabels.get(i).setBounds(120, 5, 140, 50);
			nameLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 18));
			jPanels.get(i).add(nameLabels.get(i));

			/*添加月售多少份*/
			sellCountLabels.add(new JLabel("月售:" + foods.get(i).getSellcount()
					+ "份"));
			sellCountLabels.get(i).setBounds(120, 40, 140, 50);
			jPanels.get(i).add(sellCountLabels.get(i));

			/*添加描述*/
			describeLabels.add(new JLabel("描述:"
					+ foods.get(i).getFoodInformation()));
			describeLabels.get(i).setBounds(120, 70, 180, 50);
			jPanels.get(i).add(describeLabels.get(i));

			/*添加价格*/
			priceLabels.add(new JLabel("￥" + foods.get(i).getFoodPrice()));
			priceLabels.get(i).setBounds(600, 70, 50, 50);
			jPanels.get(i).add(priceLabels.get(i));

			
			/*添加文本框显示购买数量*/

			countTextFields.add(new JTextField());
			countTextFields.get(i).setText("0");
			countTextFields.get(i).setHorizontalAlignment(JTextField.CENTER);
			countTextFields.get(i).setBounds(720, 85, 50, 20);
			jPanels.get(i).add(countTextFields.get(i));
			
			
			/*添加购买按钮*/
			addLabels.add(new JLabel());
			addLabels.get(i).setBounds(650, 65, 50, 50);
			ImageIcon icon2 = new ImageIcon("Image/加1.png");
			addLabels.get(i).setIcon(icon2);
			jPanels.get(i).add(addLabels.get(i));

			jPanels.get(i).addMouseListener(new MouseListener() {

				@Override
				public void mouseReleased(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mousePressed(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mouseExited(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < foods.size(); i++) {
						if (e.getSource().equals(jPanels.get(i))) {

							jPanels.get(i).setBackground(color);

						}

					}
				}

				@Override
				public void mouseEntered(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < foods.size(); i++) {
						if (e.getSource().equals(jPanels.get(i))) {
							jPanels.get(i).setBackground(
									new Color(255, 255, 255, 255));

						}
					}
				}

				@Override
				public void mouseClicked(MouseEvent e) {
					// TODO Auto-generated method stub

				}
			});
			addLabels.get(i).addMouseListener(new MouseListener() {

				@Override
				public void mouseReleased(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mousePressed(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mouseExited(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < foods.size(); i++) {
						if (e.getSource().equals(addLabels.get(i))) {
							ImageIcon icon2 = new ImageIcon("Image/加1.png");
							addLabels.get(i).setIcon(icon2);
						}
					}
				}

				@Override
				public void mouseEntered(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < foods.size(); i++) {
						if (e.getSource().equals(addLabels.get(i))) {
							ImageIcon icon2 = new ImageIcon("Image/加2.png");
							addLabels.get(i).setIcon(icon2);
						}
					}
				}

				@Override
				public void mouseClicked(MouseEvent e) {
					// TODO Auto-generated method stub
					try {

						for (int i = 0; i < foods.size(); i++) {

							if (e.getSource().equals(addLabels.get(i))) {

								int count = Integer.parseInt(countTextFields
										.get(i).getText());
								countTextFields.get(i).setText("" + ++count);

								int prices = (int) (foods.get(i).getFoodPrice());

								allprices = prices + allprices;

								/*结算*/
								jLabel6.setText("" + allprices);

							}

						}

					} catch (Exception e1) {
						e1.printStackTrace();
					}
				}
			});
		}
	}

	public void showFood() throws UnknownHostException, IOException {
		Client client = new Client();
		ArrayList<Food> foods = new ArrayList<Food>();
		jPanels = new ArrayList<JPanel>();
		imageLabels = new ArrayList<JLabel>();
		nameLabels = new ArrayList<JLabel>();
		describeLabels = new ArrayList<JLabel>();
		sellCountLabels = new ArrayList<JLabel>();
		priceLabels = new ArrayList<JLabel>();
		addLabels = new ArrayList<JLabel>();

		for (int i = 0; i < 6; i++) {
			/*首先放一个面板进去*/
			jPanels.add(new JPanel());
			jPanels.get(i).setSize(jPanel6.getWidth(), 120);
			jPanels.get(i).setBounds(0, jPanels.get(i).getHeight() * i,
					jPanel6.getWidth(), 120);
			jPanels.get(i).setBorder(BorderFactory.createEtchedBorder());
			jPanel6.add(jPanels.get(i));

			/*设置jPanel面板最大值*/
			Dimension ds = new Dimension(jPanel6.getWidth(), jPanels.get(i)
					.getHeight()
					* i + 150);
			jPanel6.setPreferredSize(ds);

			/*添加食物图像*/
			ImageIcon icon = new ImageIcon("Image/红烧肉.jpg");
			imageLabels.add(new JLabel());
			jPanels.get(i).setLayout(null);
			imageLabels.get(i).setBounds(10, 10, 100, 100);
			Image temp = icon.getImage().getScaledInstance(
					imageLabels.get(i).getWidth(),
					imageLabels.get(i).getHeight(), Image.SCALE_DEFAULT);
			icon = new ImageIcon(temp);
			imageLabels.get(i).setIcon(icon);
			jPanels.get(i).add(imageLabels.get(i));

			/*添加食物名字*/
			nameLabels.add(new JLabel("红烧肉"));
			nameLabels.get(i).setBounds(120, 5, 140, 50);
			nameLabels.get(i).setFont(new java.awt.Font("微软雅黑", 0, 18));
			jPanels.get(i).add(nameLabels.get(i));

			/*添加月售多少份*/
			sellCountLabels.add(new JLabel("月售:100份"));
			sellCountLabels.get(i).setBounds(120, 40, 140, 50);
			jPanels.get(i).add(sellCountLabels.get(i));

			/*添加描述*/
			describeLabels.add(new JLabel("描述:美味好吃"));
			describeLabels.get(i).setBounds(120, 70, 180, 50);
			jPanels.get(i).add(describeLabels.get(i));

			/*添加价格*/
			priceLabels.add(new JLabel("￥20"));
			priceLabels.get(i).setBounds(600, 70, 50, 50);
			jPanels.get(i).add(priceLabels.get(i));

			/*添加购买按钮*/
			addLabels.add(new JLabel());
			addLabels.get(i).setBounds(650, 65, 50, 50);
			ImageIcon icon2 = new ImageIcon("Image/加1.png");
			addLabels.get(i).setIcon(icon2);
			jPanels.get(i).add(addLabels.get(i));

			jPanels.get(i).addMouseListener(new MouseListener() {

				@Override
				public void mouseReleased(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mousePressed(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mouseExited(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mouseEntered(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mouseClicked(MouseEvent e) {
					// TODO Auto-generated method stub

				}
			});

			addLabels.get(i).addMouseListener(new MouseListener() {

				@Override
				public void mouseReleased(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mousePressed(MouseEvent e) {
					// TODO Auto-generated method stub

				}

				@Override
				public void mouseExited(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < 6; i++) {
						if (e.getSource().equals(addLabels.get(i))) {
							ImageIcon icon2 = new ImageIcon("Image/加1.png");
							addLabels.get(i).setIcon(icon2);
						}
					}
				}

				@Override
				public void mouseEntered(MouseEvent e) {
					// TODO Auto-generated method stub
					for (int i = 0; i < 6; i++) {
						if (e.getSource().equals(addLabels.get(i))) {
							ImageIcon icon2 = new ImageIcon("Image/加2.png");
							addLabels.get(i).setIcon(icon2);
						}
					}
				}

				@Override
				public void mouseClicked(MouseEvent e) {
					// TODO Auto-generated method stub

				}
			});
		}
	}

	/**
	 * 联系商家
	 * */

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:

		if (customer.getCid() != null) {

			if (jLabel7.getText().equals("营业中")) {
				new CustomerChatView().setVisible(true);
			} else {
				JOptionPane.showMessageDialog(this, "商家正在休息中哦，蓄势待发呢");
			}

		} else {
			new LoginView().setVisible(true);
			this.dispose();

		}
	}

	public void drawMarket() {

		/*设置顶部面板颜色*/
		jPanel3.setBackground(new Color(95, 142, 230));
		/*设置侧栏边框*/
		jPanel3.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 1,
				Color.LIGHT_GRAY));

	}

	/**
	 * 添加红包
	 * @throws IOException 
	 * @throws UnknownHostException 
	 * @throws ClassNotFoundException 
	 * */

	JLabel redevenlopeLabel;

	public void showBRedEvenlope(String bid) throws UnknownHostException,
			IOException, ClassNotFoundException {

		Client client = new Client();
		ArrayList<RedEvenlope> redevenlopes = client.viewRedEvenlope(bid);

		if (redevenlopes.size() != 0) {
			redevenlopeLabel = new JLabel();

			ImageIcon icon = new ImageIcon("Image/红包.png");
			//jPanel3.setLayout(null);
			redevenlopeLabel.setBounds(jPanel3.getWidth() - 150, jPanel3
					.getHeight() - 150, 50, 50);
			jPanel3.add(redevenlopeLabel);

			Image temp = icon.getImage().getScaledInstance(
					redevenlopeLabel.getWidth(), redevenlopeLabel.getHeight(),
					Image.SCALE_DEFAULT);
			icon = new ImageIcon(temp);

			redevenlopeLabel.setIcon(icon);

			redevenlopeLabel.addMouseListener(this);
		}
	}

	/**
	 * 点击红包
	 * */
	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub
		if (e.getSource().equals(redevenlopeLabel)) {
			new BRedEvenlope(sid).setVisible(true);
		}
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	/**
	 * 使用红包
	 */

	ArrayList<RedEvenlope> redevenlope;

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:

		if (customer.getCid() == null) {
			new LoginView().setVisible(true);
			this.dispose();

		} else {

			redevenlope = new ArrayList<RedEvenlope>();

			try {

				Client client = new Client();
				redevenlope = client.viewCRedEvenlope(customer.getCid());

				if (redevenlope.size() == 0) {
					JOptionPane.showMessageDialog(this, "没有可用的红包");

				} else {

					for (int i = 0; i < redevenlope.size(); i++) {
						if (redevenlope.get(i).getBid().equals(sid)) {

							if (redevenlope.get(i).getIsused().equals("已使用")) {
								JOptionPane.showMessageDialog(this, "红包已使用");
							} else {
								jLabel6
										.setText(""
												+ (Integer.parseInt(jLabel6
														.getText()) - redevenlope
														.get(i).getFavorable()));

								Client client1 = new Client();
								client1.useRedEvenlope(customer.getCid(), sid,
										"已使用");
							}

						}

					}
				}

			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}

	/**
	 * 支付
	 * */

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:

		if (customer.getCid() == null) {
			new LoginView().setVisible(true);
			this.dispose();

		} else {

			if (jLabel7.getText().equals("营业中")) {

				try {

					for (int i = 0; i < foods.size(); i++) {

						if (!countTextFields.get(i).getText().equals("0")) {
							System.out.println(i);
							Client client = new Client();
							client.buyFood(foods.get(i).getSid(), foods.get(i)
									.getSname(), foods.get(i).getFoodId(),
									foods.get(i).getFoodName(), foods.get(i)
											.getImage(), customer.getCid(),
									customer.getCname(), Integer
											.parseInt(countTextFields.get(i)
													.getText())
											* foods.get(i).getFoodPrice(),
									Integer.parseInt(countTextFields.get(i)
											.getText()), "未完成");
						}
					}

					JOptionPane.showMessageDialog(this, "支付成功");

					for (int i = 0; i < foods.size(); i++) {
						countTextFields.get(i).setText("0");
					}
					jLabel5.setText("0");

				} catch (Exception e) {

					JOptionPane.showMessageDialog(this, "支付失败");
					e.printStackTrace();

				}
			} else {
				JOptionPane.showMessageDialog(this, "商家正在休息中，蓄势待发呢");
			}
		}
	}
}