/*
 * ViewUserOrder.java
 *
 * Created on __DATE__, __TIME__
 */

package view;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.UnknownHostException;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import server.Client;

import model.Business;
import model.ModelFactory;
import model.Order;

/**
 *
 * @author  __USER__
 */
public class ViewUserOrders extends javax.swing.JFrame implements ActionListener {

	Business business = new Business();
	
	/** Creates new form ViewUserOrder */
	public ViewUserOrders() {
		initComponents();
		
		try {
			
			this.getAllOrder();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			JOptionPane.showMessageDialog(this, "请检查您的网络");
			e.printStackTrace();
		
		}
		this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jPanel2 = new javax.swing.JPanel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setFont(new java.awt.Font("微软雅黑", 0, 18));
		jLabel1.setText("\u67e5\u770b\u7528\u6237\u8ba2\u5355");

		jScrollPane1
				.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 493,
				Short.MAX_VALUE));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 436,
				Short.MAX_VALUE));

		jScrollPane1.setViewportView(jPanel2);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				jPanel1Layout.createSequentialGroup().addContainerGap(197,
						Short.MAX_VALUE).addComponent(jLabel1,
						javax.swing.GroupLayout.PREFERRED_SIZE, 157,
						javax.swing.GroupLayout.PREFERRED_SIZE).addGap(176,
						176, 176)).addGroup(
				jPanel1Layout.createSequentialGroup().addContainerGap()
						.addComponent(jScrollPane1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 495,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(23, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel1Layout.createSequentialGroup().addGap(23, 23, 23)
						.addComponent(jLabel1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 42,
								javax.swing.GroupLayout.PREFERRED_SIZE).addGap(
								18, 18, 18).addComponent(jScrollPane1,
								javax.swing.GroupLayout.DEFAULT_SIZE, 438,
								Short.MAX_VALUE).addContainerGap()));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ViewUserOrders().setVisible(true);
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	// End of variables declaration//GEN-END:variables

	
	/*查看所有订单*/
	ArrayList<Order> orders;
	ArrayList<JPanel> jPanels;
	ArrayList<JLabel> idLabels;
	ArrayList<JPanel> orderPanels;
	ArrayList<JLabel> imageLabels;
	ArrayList<JLabel> nameLabels;
	ArrayList<JLabel> remarkLabels;
	ArrayList<JLabel> countLabels;
	ArrayList<JLabel> priceLabels;
	ArrayList<JLabel> timeLabels;
	ArrayList<JButton> acceptButtons = new ArrayList<JButton>();
	ArrayList<JButton> refuseButtons = new ArrayList<JButton>();
	
	public void getAllOrder() throws SQLException, ClassNotFoundException, UnknownHostException, IOException {
		Client client = new Client();
		orders = client.viewAllOrder();
		
		jPanels = new ArrayList<JPanel>();
		idLabels = new ArrayList<JLabel>();
		orderPanels = new ArrayList<JPanel>();
		imageLabels = new ArrayList<JLabel>();
		nameLabels = new ArrayList<JLabel>();
		remarkLabels = new ArrayList<JLabel>();
		countLabels = new ArrayList<JLabel>();
		priceLabels = new ArrayList<JLabel>();
		timeLabels = new ArrayList<JLabel>();
		 
		jPanel2.setLayout(null);
		
		System.out.println(orders.size());
		
		for(int i = 0; i< orders.size();i++) {
			
			/*创建面板存储用户评论*/
			jPanels.add(new JPanel());
			jPanels.get(i).setSize(jPanel2.getWidth(), 150);
			jPanels.get(i).setBounds(0, jPanels.get(i).getHeight() * i, jPanel2.getWidth(), 150);
			jPanels.get(i).setBorder(BorderFactory.createEtchedBorder());
			jPanels.get(i).add(new JLabel("" + i));
			jPanel2.add(jPanels.get(i));
			
			/*设置jPanel2面板最大值*/
			Dimension ds = new Dimension(jPanel2.getWidth(), jPanels.get(i).getHeight() * i + 300);
			jPanel2.setPreferredSize(ds);
			
			/*添加订单号*/
			idLabels.add(new JLabel("订单号：" + ModelFactory.viewAllOrder(business).get(i).getFoodId()));
			
			jPanels.get(i).setLayout(null);
			idLabels.get(i).setBounds(20, 20, 100, 100);
			jPanels.get(i).add(idLabels.get(i));
			
			/*添加显示订单面板*/
			orderPanels.add(new JPanel());
			
			jPanels.get(i).setLayout(null);
			orderPanels.get(i).setBounds(20, 35, 400, 80);
			orderPanels.get(i).setBackground(Color.LIGHT_GRAY);
			jPanels.get(i).add(orderPanels.get(i));
			
			
			/*添加外卖图片*/
			imageLabels.add(new JLabel(new ImageIcon(ModelFactory.viewAllOrder(business).get(i).getFoodImage())));
			
			orderPanels.get(i).setLayout(null);
			imageLabels.get(i).setBounds(10, 10, 60, 60);
			orderPanels.get(i).add(imageLabels.get(i));
			
			/*添加外卖名字*/
			nameLabels.add(new JLabel(ModelFactory.viewAllOrder(business).get(i).getFoodName()));
			
			orderPanels.get(i).setLayout(null);
			nameLabels.get(i).setBounds(90, 10, 150, 20);
			orderPanels.get(i).add(nameLabels.get(i));
			
			/*添加外卖备注*/
			remarkLabels.add(new JLabel(ModelFactory.viewAllOrder(business).get(i).getRemark()));
			
			orderPanels.get(i).setLayout(null);
			remarkLabels.get(i).setBounds(90, 40, 150, 20);
			orderPanels.get(i).add(remarkLabels.get(i));
			
			/*添加订单数*/
			countLabels.add(new JLabel("X " + ModelFactory.viewAllOrder(business).get(i).getCount()));
			
			orderPanels.get(i).setLayout(null);
			countLabels.get(i).setBounds(300, 40, 150, 20);
			orderPanels.get(i).add(countLabels.get(i));
			
			/*添加订单价钱*/
			priceLabels.add(new JLabel("￥ " + ModelFactory.viewAllOrder(business).get(i).getPrice()));
			
			orderPanels.get(i).setLayout(null);
			priceLabels.get(i).setBounds(300, 60, 150, 20);
			orderPanels.get(i).add(priceLabels.get(i));
			
			/*添加订单时间*/
			timeLabels.add(new JLabel("订单时间：" + ModelFactory.viewAllOrder(business).get(i).getOrderTime()));
			
			jPanels.get(i).setLayout(null);
			timeLabels.get(i).setBounds(20, 120, 150, 20);
			jPanels.get(i).add(timeLabels.get(i));
			
			/*添加拒单按钮*/
			refuseButtons.add(new JButton("拒单"));
			
			jPanels.get(i).setLayout(null);
			refuseButtons.get(i).setBounds(250, 120, 60, 20);
			refuseButtons.get(i).addActionListener(this);
			jPanels.get(i).add(refuseButtons.get(i));
			
			
			/*添加接单按钮*/		
			acceptButtons.add(new JButton("接单"));
			
			jPanels.get(i).setLayout(null);
			acceptButtons.get(i).setBounds(350, 120, 60, 20);
			acceptButtons.get(i).addActionListener(this);
			jPanels.get(i).add(acceptButtons.get(i));
		}
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
		for(int i = 0;i < orders.size();i++) {
			if(e.getSource().equals(refuseButtons.get(i))) {
				int n = JOptionPane.showConfirmDialog(null, "确定要拒单吗？", "拒单",JOptionPane.YES_NO_OPTION);
			
				if(n == 0) {
					//拒单
					System.out.print("s");
					jPanel2.remove(jPanels.get(i));
					this.refresh();
				} 
			}
			
			if(e.getSource().equals(acceptButtons.get(i))) {
				int n = JOptionPane.showConfirmDialog(null, "确定要接单吗？", "接单",JOptionPane.YES_NO_OPTION);
			
				if(n == 0) {
					//接单
					System.out.print("s");
				} 
			}
		}
	}
	
	/*刷新*/
	public void refresh() {
		try {
			this.getAllOrder();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		
		}
	}
}